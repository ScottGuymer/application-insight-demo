version: '3'
services:
  dotnetcore:
    build: services/dotnetcore
    ports:
     - "8001:80"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=dotnetcore
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778

  java:
    build: services/java
    ports:
     - "8002:80"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=java
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
  python:
    build: services/python
    ports:
     - "8003:80"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=python
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
  node:
    build: services/node
    ports:
     - "8004:80"
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6832
      - JAEGER_SERVICE_NAME=node
      - JAEGER_SAMPLER_MANAGER_HOST_PORT=jaeger:5778
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
  test:
    build: tests
  

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./config/prometheus/:/etc/prometheus/
      - prometheus_data:/config/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./config/alertmanager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./config/grafana/config.monitoring
    restart: always 
volumes:
    prometheus_data: {}
    grafana_data: {}